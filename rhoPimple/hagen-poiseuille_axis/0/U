/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  10
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       volVectorField;
    location    "0/fluid";
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    inlet
    {
        type            codedFixedValue;
        name            myInlet;
        value           $internalField;
        redirectType    myParabolicVelocity;
        code
        #{
            scalar U_ave = 1.0;
            scalar h = 0.5;

            const fvPatch& boundaryPatch = patch();
            vectorField& field = *this;

            forAll(boundaryPatch, faceI)
            {
            field[faceI] = vector(1.5*U_ave*(1 - Foam::pow(boundaryPatch.Cf()[faceI].y()/h, 2)), 0, 0);
            //field[faceI] = vector(0.5*1.5*U_ave*(1.0 - Foam::tanh((boundaryPatch.Cf()[faceI].y() - 0.25)/0.05)), 0, 0);
            }
        #};

        codeOptions
        #{
            -I$(LIB_SRC)/finiteVolume/lnInclude \
            -I$(LIB_SRC)/meshTools/lnInclude
        #};

        codeInclude
        #{
            #include "fvCFD.H"
            #include <cmath>
            #include <iostream>
        #};
    }

    outlet
    {
        type            zeroGradient;
    }

    wall
    {
        type            noSlip;
    }

    front
    {
        type            wedge;
    }

    back
    {
        type            wedge;
    }
}


// ************************************************************************* //
