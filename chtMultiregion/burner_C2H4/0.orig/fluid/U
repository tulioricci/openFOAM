/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  10
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      binary;
    class       volVectorField;
    location    "0.000000";
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    f_front
    {
        type            wedge;
    }
    outlet
    {
        type            zeroGradient;
    }
    f_back
    {
        type            wedge;
    }
    fuel
    {
        type            fixedValue;
        value           uniform (0 0.11 0);
/*        type            codedFixedValue;*/
/*        value           uniform (0 0 0);*/
/*        name            myFuelInlet;*/
/*        code            #{*/
/*            scalar U = 0.11;*/
/*            scalar sigma = 0.00020;*/
/*            scalar int_rad = 2.38*25.4/2000.0;*/
/*            const fvPatch& boundaryPatch = patch();*/
/*            vectorField& field = *this;*/

/*            forAll(boundaryPatch, faceI)*/
/*            {*/
/*            //field[faceI] = vector(0, U*0.5*(1.0 - Foam::tanh((boundaryPatch.Cf()[faceI].x() - int_rad)/sigma)), 0);*/
/*            field[faceI] = vector(0, 0.11, 0);*/
/*            }*/
/*        #};*/
/*        codeInclude     #{*/
/*            #include "fvCFD.H"*/
/*            #include <cmath>*/
/*            #include <iostream>*/
/*        #};*/
/*        codeOptions     #{*/
/*            -I$(LIB_SRC)/finiteVolume/lnInclude \*/
/*            -I$(LIB_SRC)/meshTools/lnInclude*/
/*        #};*/
    }
    fluid_to_solid
    {
        type            noSlip;
    }
    burner
    {
        type            noSlip;
    }
    shield
    {
        type            fixedValue;
        value           uniform (0 0.11 0);
/*        type            codedFixedValue;*/
/*        value           uniform (0 0 0);*/
/*        name            myShrdInlet;*/
/*        code            #{*/
/*            scalar U = 0.11;*/
/*            scalar sigma = 0.00020;*/
/*            scalar int_rad = 2.38*25.4/2000.0;*/

/*            const fvPatch& boundaryPatch = patch();*/
/*            vectorField& field = *this;*/

/*            forAll(boundaryPatch, faceI)*/
/*            {*/
/*            //field[faceI] = vector(0, U*0.5*(1.0 + Foam::tanh((boundaryPatch.Cf()[faceI].x() - int_rad)/sigma)), 0);*/
/*            field[faceI] = vector(0, 0.11, 0);*/
/*            }*/
/*        #};*/
/*        codeInclude     #{*/
/*            #include "fvCFD.H"*/
/*            #include <cmath>*/
/*            #include <iostream>*/
/*        #};*/
/*        codeOptions     #{*/
/*            -I$(LIB_SRC)/finiteVolume/lnInclude \*/
/*            -I$(LIB_SRC)/meshTools/lnInclude*/
/*        #};*/
    }
}


// ************************************************************************* //
